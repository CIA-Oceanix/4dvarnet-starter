# @package _global_

paths:
    natl_gf_5nads: data/natl_gf_w_5nadirs.nc
    enatl_gf_5nads: data/enatl_wo_tide.nc
    masks_path: /DATASET/GLORYS12/nadir_obs_masks.pickle
    glorys12_data: /DATASET/GLORYS12/reanalysis/cmems_mod_glo_phy_my_0.083deg_P1D-m_multi-vars_66.00W-54.00W_32.00N-44.00N_0.49m_2010-01-01-2019-12-31.nc



domain: ???

trainer:
  _target_: pytorch_lightning.Trainer
  inference_mode: False
  gradient_clip_val: 0.5
  accelerator: gpu
  devices: 1
  logger:
    _target_: pytorch_lightning.loggers.CSVLogger
    save_dir: ${hydra:runtime.output_dir}
    name: ${hydra:runtime.choices.xp}
    version: ''
  max_epochs: 350
  callbacks:
    - _target_: src.versioning_cb.VersioningCallback
    - _target_: pytorch_lightning.callbacks.LearningRateMonitor
    - _target_: pytorch_lightning.callbacks.ModelCheckpoint
      monitor: val_mse
      save_top_k: 3
      filename: '{val_mse:.5f}-{epoch:03d}'

datamodule:
  _target_: src.data.BaseDataModule
  input_da: 
    _target_: src.utils.open_glorys12_data
    path: ${paths.glorys12_data}
    masks_path: ${paths.masks_path}
    domain: ${domain.train}
  domains:
    train:
      time: {_target_: builtins.slice, _args_: ['2010-01-01', '2018-12-31']}
    val: 
      time: {_target_: builtins.slice, _args_: ['2019-07-01', '2019-12-31']}
    test: 
      time: {_target_: builtins.slice,  _args_: ['2019-01-01', '2019-06-30']}
  xrds_kw:
    patch_dims: { time: 29, lat: 145, lon: 145}
    strides: { time: 1, lat: 145, lon: 145}
    domain_limits: ${domain.train}
  dl_kw: {batch_size: 4, num_workers: 4}
  aug_kw:
    aug_factor: 2
    aug_only: True

model:
  _target_: src.models.Lit4dVarNetForecast
  persist_rw: False
  opt_fn:
    _target_: src.utils.cosanneal_lr_adam
    _partial_: true
    lr: 1e-3
    T_max: ${trainer.max_epochs}
  rec_weight:
      _target_: src.utils.get_forecast_wei
      patch_dims: ${datamodule.xrds_kw.patch_dims}
      crop: {time: 0, lat: 12, lon: 12}
  solver:
    _target_: src.models.GradSolverZero
    n_step: 10
    lr_grad: 1e3
    # lr_grad: 0.2
    prior_cost:
      _target_: src.models.BilinAEPriorCost
      dim_in: ${datamodule.xrds_kw.patch_dims.time}
      dim_hidden: 64
      bilin_quad: False
      # bilin_quad: True
      #downsamp: 2
    obs_cost:
      _target_: src.models.BaseObsCost
    grad_mod:
      _target_: src.models.ConvLstmGradModel
      dim_in: ${datamodule.xrds_kw.patch_dims.time}
      dim_hidden: 96
  test_metrics: ${metrics.test_metrics}
  pre_metric_fn:
        _target_: xarray.Dataset.sel
        _partial_: True
        time: {_target_: builtins.slice, _args_: ["2019-01-25", "2019-06-05"]}
        lat: ${domain.test.lat}
        lon: ${domain.test.lon}

metrics:
  nrmse_scores: {_target_: src.utils.rmse_based_scores_from_ds, _partial_: True}
  psd_scores: {_target_: src.utils.psd_based_scores_from_ds, _partial_: True}
  get0: {_target_: operator.itemgetter, _args_: [0]}
  get1: {_target_: operator.itemgetter, _args_: [1]}
  test_metrics:
    'mu': {_target_: src.utils.pipe, _partial_: true, fns: ['${metrics.nrmse_scores}', '${metrics.get0}']}
    'sig': {_target_: src.utils.pipe, _partial_: true, fns: ['${metrics.nrmse_scores}', '${metrics.get1}']}
    'lx': {_target_: src.utils.pipe, _partial_: true, fns: ['${metrics.psd_scores}', '${metrics.get0}']}
    'lt': {_target_: src.utils.pipe, _partial_: true, fns: ['${metrics.psd_scores}', '${metrics.get1}']}

entrypoints:
  - _target_: pytorch_lightning.seed_everything
    seed: 333
  - _target_: src.train.base_training
    trainer: ${trainer}
    lit_mod: ${model}
    dm: ${datamodule}

defaults:
  - /domain: gf
  - _self_

