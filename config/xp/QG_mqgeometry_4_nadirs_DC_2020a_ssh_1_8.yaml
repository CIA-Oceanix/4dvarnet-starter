# @package _global_

paths:
    natl_gf_5nads: /DATASET/NATL/cal_data_new_errs.nc
    enatl_gf_5nads: ../sla-data-registry/qdata/enatl_wo_tide.nc

domain: ???

trainer:
  _target_: pytorch_lightning.Trainer
  inference_mode: False
  gradient_clip_val: 0.5
  accelerator: gpu
  devices: 1
  logger: 
    _target_: pytorch_lightning.loggers.CSVLogger
    save_dir: ${hydra:runtime.output_dir}
    name: ${hydra:runtime.choices.xp}
    version: ''
  max_epochs: 10 #150
  callbacks:
    - _target_: src.versioning_cb.VersioningCallback
    - _target_: pytorch_lightning.callbacks.LearningRateMonitor
    - _target_: pytorch_lightning.callbacks.ModelCheckpoint
      monitor: val_mse
      save_top_k: 3
      filename: '{val_mse:.5f}-{epoch:03d}'

datamodule:
  _target_: src.data.BaseDataModule
  input_da: 
    path: ${paths.natl_gf_5nads}
    _target_: src.utils.load_full_enatl_data
    path_obs: "/DATASET/eNATL/eNATL60_BLB002_SSH_nadirs/eNATL60-BLB002-7nadirs-2009-2010-1_8.nc"
    path_gt: "/DATASET/eNATL/eNATL60_BLB002_SSH_nadirs/eNATL60-BLB002-ssh-2009-2010-1_8.nc"
    obs_var: input
    obs_gt: ssh
  domains:
    train:
      time: {_target_: builtins.slice, _args_: ['2009-07-02', '2009-07-20']}
    val: 
      time: {_target_: builtins.slice, _args_: ['2010-04-01', '2010-04-20']}
    test: 
      time: {_target_: builtins.slice,  _args_: ['2010-06-01', '2010-06-30']}
  xrds_kw:
    patch_dims: { time: 10, lat: 113, lon: 113}
    strides: { time: 1, lat: 90, lon: 90}
    domain_limits: ${domain.train}
  dl_kw: {batch_size: 1, num_workers: 1}
  aug_kw:
    aug_factor: 1
    aug_only: True

model:
  _target_: src.models.Lit4dVarNet
  persist_rw: False
  opt_fn:
    _target_: src.utils.cosanneal_lr_adam_QG
    _partial_: true
    lr: 1e-3
    T_max: ${trainer.max_epochs}
  rec_weight:
      _target_: src.utils.get_triang_time_wei
      patch_dims: ${datamodule.xrds_kw.patch_dims}
      crop: {time: 0, lat: 0, lon: 20}
      offset: 1
  solver: 
    _target_: src.models.GradSolver_QG
    x_init: datamodule.input_da.path_mdt
    n_step: 5 #5 #10
    lr_grad: 1e3
    # lr_grad: 0.2
    prior_cost: 
      _target_: src.models.QGCost_mqgeometry
      nl: 1
      L: 1380.0e3 # domain size (m). 12Â° = 12 * 115 km = 1380e3 m
      g_prime: 0.025 # gravity
      H: 400 # layer thickness (m)
      f0: 9.375e-5 # mean coriolis (s^-1)
      beta : 1.754e-11 # coriolis gradient (m^-1 s^-1)
      ## wind forcing 
      tau0 : 0.
      bottom_drag_coef : 0.
      x_dim : ${datamodule.xrds_kw.patch_dims.lon}
      y_dim : ${datamodule.xrds_kw.patch_dims.lat}
      apply_mask : True
    obs_cost: 
      _target_: src.models.BaseObsCost
    grad_mod: 
      _target_: src.models.ConvLstmGradModel
      dim_in: ${datamodule.xrds_kw.patch_dims.time}
      dim_hidden: 48
  test_metrics: ${metrics.test_metrics}
  pre_metric_fn: 
        _target_: xarray.Dataset.sel
        _partial_: True
        time: {_target_: builtins.slice, _args_: ["2012-10-22", "2012-12-02"]}
        lat: ${domain.test.lat}
        lon: ${domain.test.lon}

metrics:
  nrmse_scores: {_target_: src.utils.rmse_based_scores_from_ds, _partial_: True}
  psd_scores: {_target_: src.utils.psd_based_scores_from_ds, _partial_: True}
  get0: {_target_: operator.itemgetter, _args_: [0]}
  get1: {_target_: operator.itemgetter, _args_: [1]}
  test_metrics:
    'mu': {_target_: src.utils.pipe, _partial_: true, fns: ['${metrics.nrmse_scores}', '${metrics.get0}']}
    'sig': {_target_: src.utils.pipe, _partial_: true, fns: ['${metrics.nrmse_scores}', '${metrics.get1}']}
    'lx': {_target_: src.utils.pipe, _partial_: true, fns: ['${metrics.psd_scores}', '${metrics.get0}']}
    'lt': {_target_: src.utils.pipe, _partial_: true, fns: ['${metrics.psd_scores}', '${metrics.get1}']}

entrypoints:
  - _target_: pytorch_lightning.seed_everything
    seed: 333
  - _target_: src.train.base_training
    trainer: ${trainer}
    lit_mod: ${model}
    dm: ${datamodule}

defaults:
  - /domain: gf_bis_big
  - _self_

