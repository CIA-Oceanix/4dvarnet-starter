# @package _global_
xpd: ???

xp_name: ${hydra:runtime.choices.xp}

xp_overrides: 
  model: 
    rec_weight: ${rec_weight}

overrides_targets:
  model.rec_weight: contrib.multi_domain_diag.get_smooth_spat_rec_weight
  model.rec_weight.orig_rec_weight: contrib.multi_domain_diag.load_cfg_from_xp
  
trainer: 
  _target_: pytorch_lightning.Trainer
  inference_mode: False
  accelerator: gpu
  devices: 1
  logger: 
    _target_: pytorch_lightning.loggers.CSVLogger
    save_dir: ${xpd}
    name: ${xp_name}
    version: ${now:%y%m%d%H%M%S}

lit_mod: 
  _target_: contrib.multi_domain_diag.load_cfg_from_xp
  key: model
  xpd : ${xpd}
  overrides: ${xp_overrides}
  overrides_targets: ${overrides_targets}

dm: 
  _target_: contrib.multi_domain_diag.load_cfg_from_xp
  key: datamodule
  xpd : ${xpd}
  overrides: ${xp_overrides}
  overrides_targets: ${overrides_targets}

ckpt: 
  _target_: src.utils.best_ckpt
  xp_dir: ${xpd}

rec_weight:
  # _target_: contrib.multi_domain_diag.get_smooth_spat_rec_weight
  orig_rec_weight:
    # _target_: contrib.multi_domain_diag.load_cfg_from_xp
    key: model.rec_weight
    xpd : ${xpd}

entrypoints:
  - _target_: pytorch_lightning.seed_everything
    seed: 333
  - _target_: builtins.print
    _args_: ['${hydra:runtime.output_dir}']
  - _target_: pytorch_lightning.Trainer.test
    self: ${trainer}
    model: ${lit_mod}
    datamodule: ${dm}
    ckpt_path: ${ckpt}

defaults:
  - _self_

