# @package _global_

paths:
    natl_4nads_swot_osse: /DATASET/mbeauchamp/IMT/data/natl_4nadirs_swot.nc
    natl_6nads_ose: /DATASET/mbeauchamp/IMT/data/natl_ose_6nadirs.nc

domain: ???

trainer:
  _target_: pytorch_lightning.Trainer
  inference_mode: False
  gradient_clip_val: 0.5
  accelerator: gpu
  devices: 1
  accumulate_grad_batches: 4
  logger: 
    _target_: pytorch_lightning.loggers.CSVLogger
    save_dir: ${hydra:runtime.output_dir}
    name: ${hydra:runtime.choices.xp}
    version: ''
  max_epochs: 50
  callbacks:
    - _target_: src.versioning_cb.VersioningCallback
    - _target_: pytorch_lightning.callbacks.LearningRateMonitor
    - _target_: pytorch_lightning.callbacks.ModelCheckpoint
      monitor: val_mse
      save_top_k: 3
      filename: '{val_mse:.5f}-{epoch:03d}'

datamodule:
  _target_: src.data_notebook_fast.BaseDataModule
  input_da:
    _target_: src.utils.load_altimetry_data_fast
    path: ${paths.natl_4nads_swot_osse}
  domains:
    train:
      time: {_target_: builtins.slice, _args_: ['2013-02-24', '2013-09-30']}
    val: 
      time: {_target_: builtins.slice, _args_: ['2012-12-15', '2013-02-24']}
    test: 
      time: {_target_: builtins.slice,  _args_: ['2012-10-01', '2012-12-20']}
  xrds_kw:
    patch_dims: { time: 15, lat: 120, lon: 120}
    strides: { time: 1, lat: 100, lon: 100}
    domain_limits: ${domain.train}
  dl_kw: {batch_size: 8, num_workers: 1}
  aug_kw:
    aug_factor: 2
    aug_only: True
  norm_stats:
    - 0.31651841229383865
    - 0.3892599391249885
  resize_factor: 2

model:
  _target_: contrib.stoch_vae.models.Lit4dVarNet
  persist_rw: False
  opt_fn:
    _target_: src.utils.cosanneal_vae_lr_adam
    _partial_: true
    lr: 1e-3
    T_max: ${trainer.max_epochs}
  rec_weight:
      _target_: src.utils.get_triang_time_wei
      patch_dims: ${datamodule.xrds_kw.patch_dims}
      crop: {time: 0, lat: 10, lon: 10}
      offset: 1
  solver: 
    _target_: contrib.stoch_vae.solver.GradSolver
    n_step: 10
    lr_grad: 1e3
    reset_state: False
    # lr_grad: 0.2
    prior_cost: 
      _target_: contrib.stoch_vae.solver.BilinAEPriorCost
      dim_in: ${datamodule.xrds_kw.patch_dims.time}
      dim_hidden: 32
      gen_mod: ${model.solver.gen_mod}
      bilin_quad: False
      # bilin_quad: True
      downsamp: 2
    obs_cost: 
      _target_: contrib.stoch_vae.solver.BaseObsCost
    gen_mod:
      _target_: contrib.stoch_vae.solver.VAE
      input_shape: 
        - ${datamodule.xrds_kw.patch_dims.time}
        - ${datamodule.xrds_kw.patch_dims.lat}
        - ${datamodule.xrds_kw.patch_dims.lon}
      z_dim: 200 
    grad_mod: 
      _target_: contrib.stoch_vae.solver.ConvLstmGradModel
      dim_in: ${datamodule.xrds_kw.patch_dims.time}
      dim_hidden: 48
  test_metrics: ${metrics.test_metrics}
  pre_metric_fn: 
        _target_: xarray.Dataset.sel
        _partial_: True
        time: {_target_: builtins.slice, _args_: ["2012-10-22", "2012-12-02"]}
        lat: ${domain.test.lat}
        lon: ${domain.test.lon}

metrics:
  nrmse_scores: {_target_: src.utils.rmse_based_scores_from_ds, _partial_: True}
  psd_scores: {_target_: src.utils.psd_based_scores_from_ds, _partial_: True}
  get0: {_target_: operator.itemgetter, _args_: [0]}
  get1: {_target_: operator.itemgetter, _args_: [1]}
  test_metrics:
    'mu': {_target_: src.utils.pipe, _partial_: true, fns: ['${metrics.nrmse_scores}', '${metrics.get0}']}
    'sig': {_target_: src.utils.pipe, _partial_: true, fns: ['${metrics.nrmse_scores}', '${metrics.get1}']}
    'lx': {_target_: src.utils.pipe, _partial_: true, fns: ['${metrics.psd_scores}', '${metrics.get0}']}
    'lt': {_target_: src.utils.pipe, _partial_: true, fns: ['${metrics.psd_scores}', '${metrics.get1}']}

entrypoints:
  - _target_: pytorch_lightning.seed_everything
    seed: 333
  - _target_: src.train.base_training
    trainer: ${trainer}
    lit_mod: ${model}
    dm: ${datamodule}

defaults:
  - /domain: gf
  - _self_

