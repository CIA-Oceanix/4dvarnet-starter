# @package _global_
inp_da: default
domain: ???
data:
  sst: contrib.multimodal.ose_utils.load_ose_data_with_mursst

xp_overrides:
  datamodule:
    input_da: 
      _target_: ${oc.select:data.${inp_da},contrib.ose2osse.data.load_ose_data}
    domains: 
      test: 
        time: {_target_: builtins.slice, _args_: ['2016-12-01', '2018-01-31']}
        # time: {_target_: builtins.slice, _args_: ['2016-12-01', '2017-03-31']}
      train: 
        time: {_target_: builtins.slice, _args_: ['2016-12-01', '2018-01-31']}
    xrds_kw: 
      strides: {lat: 100, lon: 100}
      domain_limits: ${domain.train}
    dl_kw:
      batch_size: 16
      num_workers: 3

  model:
    test_metrics: ${ose_metrics.test_metrics}
    pre_metric_fn: ${ose_metrics.pre_metric_fn}

ose_metrics:
  test_metrics:
    'mu': {_target_: contrib.ose2osse.diagnostics.rmse_score, _partial_: true}
    'rmse': {_target_: contrib.ose2osse.diagnostics.rmse, _partial_: true}
    'lx': {_target_: contrib.ose2osse.diagnostics.dc_spat_res_from_diag_data, _partial_: true, v: rec}
  pre_metric_fn: 
    _target_: src.utils.pipe
    _partial_: true
    fns:
      - _target_: operator.attrgetter
        _args_: ['out']
      - _target_: contrib.ose2osse.diagnostics.compute_segment_data
        domain: ${domain.test}
        _partial_: true
        oi:
          _target_: src.utils.pipe
          inp:
            _target_: xarray.open_dataset
            _args_: ['../sla-data-registry/data_OSE/NATL/training/ssh_alg_h2g_j2g_j2n_j3_s3a_duacs.nc']
          fns:
            - _target_: operator.attrgetter
              _args_: ['ssh']
        test_track:
          _target_: xarray.open_dataset
          _args_: ['../sla-data-registry/data_OSE/along_track/c2_2017_world.nc']
      - _target_: operator.itemgetter
        _args_: [1]

defaults:
  - /domain: gf
