#@package _global_

dim_in:
  _target_: operator.add
  _args_:
    - 1 
    - {_target_: builtins.int, _args_: ['${sst}']}

new_model:
  _target_: contrib.uw_convlstm.models.Interp2dWrapper
  inp_shape: [240, 240]
  sst: ${sst}
  inp_pattern: batch time lat lon
  out_pattern: batch () time lat lon
  mod:
    _target_: contrib.uw_convlstm.models.BidirectionalConvLstm2d
    encoder: 
      _target_: torch.nn.Sequential
      _args_:
        - {_target_: 'contrib.uw_convlstm.models.CNNEncoder', kernel_size: 3, dim_in: '${......dim_in}'}
        - {_target_: torch.nn.Dropout3d, p: 0.4}
    convlstm: {_target_: 'contrib.uw_convlstm.models.ConvLstm', kernel_size: 3, dim_hidden: 128, _partial_: true}
    decoder: 
      _target_: torch.nn.Sequential
      _args_:
        - {_target_: torch.nn.Dropout3d, p: 0.4}
        - {_target_: 'contrib.uw_convlstm.models.CNNDecoder', kernel_size: 3}

trainer:
  max_epochs: 150

datamodule:
  coarsen: 1
  xrds_kw:
    patches: {time: 20}
  dl_kw: {batch_size: 16}
  aug_kw:
    aug_factor: 15
    aug_only: False

model: 
  opt_fn:
    _target_: contrib.uw_convlstm.utils.scotts_lr
    weight_decay: 2e-5
  rec_weight:
    crop: {lat: 5, lon: 5}
    offset: 1
  solver: ${..new_model}
